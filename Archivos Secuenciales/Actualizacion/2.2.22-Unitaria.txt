Accion 2.2.22 (Actualizacion unitaria) Es
  Ambiente

  Fecha = Registro Es
    dd: 1..31;
    mm: 1..12;
    aaaa: N(4);
  FinRegistro

  Amigos =  Registro Es
    Clave = Registro Es
      Cod_Usuario: N(6);
      Cod_Amigo: N(5);
    FinRegistro
    Fecha_Amistad: Fecha;
    Mensaje_Muro: AN(50);
  FinRegistro

  Notificaciones = Registro Es
    Clave= Registro Es
      Cod_Usuario: N(6);
      Cod_Amigo: N(5);
      Cod_Movimiento:("A","B","M");
    FinRegistro
    Fecha_Amistad: Fecha;
    Mensaje_Muro: AN(50);
  FinRegistro

  arch_amigo, arch_salida: Archivo de tipo Amigos ordenado por Clave;
  reg_amigo, reg_salida: Amigos;
  arch_noti: Archivo de tipo Notificaciones ordenado por Clave;
  reg_noti: Notificaciones;

  Procedimiento Leer_Amigos() Es
    Leer(arch_amigo,reg_amigo);
    Si FDA(arch_amigo) Entonces
      reg_amigo.Clave.Cod_Usuario:= HV;
      reg_amigo.Clave.Cod_Amigo := HV;
    FinSi
  FinProcedimiento

  Procedimiento Leer_Notificaciones() Es
    Leer(arch_noti, reg_noti);
    Si FDA(arch_noti) Entonces
      reg_noti.Clave.Cod_Usuario:=HV;
      reg_noti.Clave.Cod_Amigo:= HV;
    FinSi
  FinProcedimiento

  Cont_Amigos: N;
  Resguardo: N(6);
  Mostrar_Mayor: N(6);
  Mayor_cont_Amigos:N;

  Procedimiento Obtener_Mayor() Es
    Si (reg_amigo.Clave.Cod_Usuario = Resguardo) Entonces
      Cont_Amigos:= Cont_Amigos + 1;
      Sino
        Si(reg_amigo.Clave.Cod_Usuario <> HV) Entonces
          Si(Cont_Amigos > Mayor_cont_Amigos) Entonces
            Mayor_cont_Amigos := Cont_Amigos;
            Mostrar_Mayor := Resguardo;
          FinSi
          Resguardo:= reg_amigo.Clave.Cod_Usuario;
          Cont_Amigos:=0;
        FinSi
    FinSi
  FinProcedimiento

  Proceso
  ABRIR E/(arch_amigo);
  ABRIR E/(arch_noti);
  ABRIR /S(arch_salida);
  Leer_Amigos();
  Leer_Notificaciones();
  Cont_Amigos:=0;
  Mayor_cont_Amigos:=0;
  Resguardo:= reg_amigo.Clave.Cod_Usuario;

  Mientras (reg_amigo.Clave <> HV) y (reg_noti.Clave <> HV) Hacer
    Obtener_Mayor();
    Si(reg_amigo.Clave < reg_noti.Clave) Entonces
      reg_salida:= reg_amigo;
      Escribir(arch_salida,reg_salida);
      Leer_Amigos();
      Sino
        Si(reg_amigo.Clave = reg_noti.Clave) Entonces
          Segun(reg_noti.Cod_Movimiento) Entonces
            "A":
              Escribir("Error solicitud invalida");
              reg_salida:=reg_amigo;
              Escribir(arch_salida,reg_salida);
            
            "B":
              Escribir("Se a eliminado al amigo: ",reg_amigo.Cod_Amigo);

            "M":
              reg_amigo.Mensaje_Muro :=reg_noti.Mensaje_Muro;
              reg_salida:= reg_amigo;
              Escribir(arch_salida, reg_salida);
          FinSegun
          Leer_Amigos();
          Leer_Notificaciones();
        FinSi
        Sino
          Si(reg_amigo.Clave > reg_noti.Clave) Entonces
            Segun (reg_noti.Cod_Movimiento) Entonces
              "A":
                reg_salida.Clave.Cod_Usuario :=  reg_noti.Clave.Cod_Usuario;
                reg_salida.Clave.Cod_Amigo :=  reg_noti.Clave.Cod_Amigo;
                reg_salida.Fecha_Amistad:= reg_noti.Fecha_Amistad;
                reg_salida.Mensaje_Muro:= reg_noti.Mensaje_Muro;
                Escribir(arch_salida,reg_salida);

              "B":
                Escribir("Baja invalida");

              "M":
                Escribir("Modificacion Invalida");
            FinSegun
            Leer_Notificaciones();
          FinSi
      FinSi
    FinSi
  FinMientras

  CERRAR(arch_amigo);
  CERRAR(arch_noti);
  CERRAR(arch_salida);
  Esc("El usuario con mayor cantidad de amigos fue: ",Mostrar_Mayor);
FinAccion